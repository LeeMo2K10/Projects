/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.67
 * Generated at: 2016-01-25 08:49:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class callable_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

// Prompt for beginning and ending years
String sLo = request.getParameter("lo");
if (sLo == null)
sLo = "";
String sHi = request.getParameter("hi");
if (sHi == null)
sHi = "";

      out.write("\n");
      out.write("<H3>Select Composers by Year Born</H3>\n");
      out.write("<FORM>\n");
      out.write("<TABLE>\n");
      out.write("<TR>\n");
      out.write("<TD>Year range:\n");
      out.write("<INPUT TYPE=\"TEXT\" NAME=\"lo\" SIZE=4 VALUE=\"");
      out.print( sLo );
      out.write("\">\n");
      out.write("and\n");
      out.write("<INPUT TYPE=\"TEXT\" NAME=\"hi\" SIZE=4 VALUE=\"");
      out.print( sHi );
      out.write("\">\n");
      out.write("<INPUT TYPE=\"SUBMIT\" VALUE=\"Search\">\n");
      out.write("</TD>\n");
      out.write("</TR>\n");
      out.write("</TABLE>\n");
      out.write("</FORM>\n");

if (!sLo.equals("") && (!sHi.equals(""))) {
int lo = Integer.parseInt(sLo);
int hi = Integer.parseInt(sHi);
// Load the driver
Class.forName("com.mysql.jdbc.Driver");
Connection con = null;
try {
// Connect to the composers database
con = DriverManager.getConnection
("jdbc:mysql://localhost:3306/bizruntime","root","root");
// Set up callable procedure
String sql = "{call BornBetween(?, ?)}";
CallableStatement cstmt = con.prepareCall(sql);
cstmt.setInt(1, lo);
cstmt.setInt(2, hi);
ResultSet rs = cstmt.executeQuery();

      out.write("\n");
      out.write("<P>\n");
      out.write("<TABLE BORDER=1 CELLPADDING=3 CELLSPACING=0>\n");
      out.write("<TR>\n");
      out.write("<TH>Name</TH>\n");
      out.write("<TH>Nationality</TH>\n");
      out.write("<TH>Lived</TH>\n");
      out.write("</TR>\n");

// Print the result set
while (rs.next()) {
String fname = rs.getString(1);
String lname = rs.getString(2);
String nationality = rs.getString(3);
int yearBorn = rs.getInt(4);
int yearDied = rs.getInt(5);

      out.write("\n");
      out.write("<TR>\n");
      out.write("<TD>");
      out.print( fname );
      out.write(' ');
      out.print( lname );
      out.write("</TD>\n");
      out.write("<TD>");
      out.print( nationality );
      out.write("</TD>\n");
      out.write("<TD>");
      out.print( yearBorn );
      out.write('-');
      out.print( yearDied );
      out.write("</TD>\n");
      out.write("</TR>\n");

}

      out.write("\n");
      out.write("</TABLE>\n");

}
finally {
if (con != null) {
con.close();
con = null;
}
}
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
