/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.67
 * Generated at: 2016-01-25 11:05:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class hiddenfields_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

public static final int WAY_LO = 0;
	public static final int WAY_HI = 101;
	public static final String PARMSKEY = "jspcr.sessions.numguess.parameters";

	// Inner class containing state variables
	public class Parameters {
		int lo;
		int hi;
		int numGuesses;
		int state;
	}
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<H3>Number Guess Guesser</H3>\n");
      out.write('\n');

	Parameters parms = (Parameters) session.getAttribute(PARMSKEY);
	if (parms == null) {
		parms = new Parameters();
		parms.state = 0;
		session.setAttribute(PARMSKEY, parms);
	}
	switch (parms.state) {
	case 0: {
		// Initial screen

      out.write("\n");
      out.write("<FORM>\n");
      out.write("\tThink of a number between\n");
      out.write("\t");
      out.print(WAY_LO + 1);
      out.write("\n");
      out.write("\tand\n");
      out.write("\t");
      out.print(WAY_HI - 1);
      out.write(", and I'll try to guess it.\n");
      out.write("\t<P>Click OK when ready.\n");
      out.write("\t<P>\n");
      out.write("\t\t<INPUT TYPE=\"submit\" VALUE=\"OK\">\n");
      out.write("</FORM>\n");

	parms.lo = WAY_LO;
		parms.hi = WAY_HI;
		parms.numGuesses = 0;
		parms.state = 1;
		break;
	}
	case 1: {
		// First guess
		parms.numGuesses++;
		int guess = (parms.hi + parms.lo) / 2;

      out.write("\n");
      out.write("<FORM>\n");
      out.write("\tMy first guess is\n");
      out.write("\t");
      out.print(guess);
      out.write(". How did I do?\n");
      out.write("\t<P>\n");
      out.write("\t\t<INPUT TYPE=\"radio\" NAME=\"result\" VALUE=\"-1\" onClick=\"submit()\">\n");
      out.write("\t\tToo low <INPUT TYPE=\"radio\" NAME=\"result\" VALUE=\"0\" onClick=\"submit()\">\n");
      out.write("\t\tExactly right <INPUT TYPE=\"radio\" NAME=\"result\" VALUE=\"1\"\n");
      out.write("\t\t\tonClick=\"submit()\"> Too high\n");
      out.write("</FORM>\n");
      out.write("<P>\n");
      out.write("\t");

		parms.state = 2;
			break;
		}
		case 2: {
			// After first guess
			parms.numGuesses++;
			int result = Integer.parseInt(request.getParameter("result"));
			int guess = (parms.hi + parms.lo) / 2;
			if (result < 0) {
				parms.lo = guess;
				guess = (parms.hi + parms.lo) / 2;
			} else if (result > 0) {
				parms.hi = guess;
				guess = (parms.hi + parms.lo) / 2;
			}
			if (result != 0) {
	
      out.write("\n");
      out.write("\n");
      out.write("<FORM>\n");
      out.write("\t");

		if (parms.lo > WAY_LO)
					out.println(parms.lo + " is too low.<BR>");
				if (parms.hi < WAY_HI)
					out.println(parms.hi + " is too high.<BR>");
				if ((parms.hi - parms.lo) > 1) {
	
      out.write("\n");
      out.write("\tMy next guess is\n");
      out.write("\t");
      out.print(guess);
      out.write(". How did I do?\n");
      out.write("\t<P>\n");
      out.write("\t\t<INPUT TYPE=\"radio\" NAME=\"result\" VALUE=\"-1\" onClick=\"submit()\">\n");
      out.write("\t\tToo low <INPUT TYPE=\"radio\" NAME=\"result\" VALUE=\"0\" onClick=\"submit()\">\n");
      out.write("\t\tExactly right <INPUT TYPE=\"radio\" NAME=\"result\" VALUE=\"1\"\n");
      out.write("\t\t\tonClick=\"submit()\"> Too high\n");
      out.write("</FORM>\n");

	} else {
				String[] text = { "Are we cheating?", "Did we forget our number?",
						"Perhaps we clicked the wrong button?", "What happened?", "What gives?", };
				String message = text[(int) (Math.random() * text.length)];
				session.removeAttribute(PARMSKEY);

      out.write("\n");
      out.write("<FORM>\n");
      out.write("\t");
      out.print(message);
      out.write("<P>\n");
      out.write("\t\t<INPUT TYPE=\"SUBMIT\" VALUE=\"Start Over\">\n");
      out.write("</FORM>\n");

	}
		} else {
			parms.numGuesses--;

      out.write("\n");
      out.write("<FORM>\n");
      out.write("\tI win, and after only\n");
      out.write("\t");
      out.print(parms.numGuesses);
      out.write("\n");
      out.write("\tguesses!\n");
      out.write("\t<P>Do you want to try again?\n");
      out.write("\t<P>\n");
      out.write("\t\t<INPUT TYPE=\"SUBMIT\" VALUE=\"Start Over\">\n");
      out.write("</FORM>\n");

	session.removeAttribute(PARMSKEY);
		}
		break;
	}
	}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
