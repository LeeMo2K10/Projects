<%@ page session="false" %>
<%@ page import="java.sql.*" %>
<%@ page import="java.util.*" %>
<%@ page import="java.lang.reflect.*" %>
<%
String driverName = request.getParameter("driverName");
if (driverName == null)
driverName = "";
driverName = driverName.trim();
if (driverName.equals(""))
throw new ServletException("No driverName parameter");
// Get required database URL parameter
String url = request.getParameter("url");
if (url == null)
url = "";
url = url.trim();
if (url.equals(""))
throw new ServletException("No url parameter");
// Get optional userID parameter
String userID = request.getParameter("userID");
if (userID == null)
userID = "";
userID = userID.trim();
// Get optional password parameter
String password = request.getParameter("password");
if (password == null)
password = "";
password = password.trim();
// Load the driver
Class.forName(driverName);
Connection con = null;
try {
// Open the database connection and get the metadata
con = DriverManager.getConnection(url, userID, password);
DatabaseMetaData md = con.getMetaData();
/*
Use reflection to get a list of methods that the
metadata class supports. Select only public methods
that take no parameters and that return either
a string or a boolean.*/
Class mdclass = md.getClass();
Method[] methods = mdclass.getDeclaredMethods();
Map methodMap = new TreeMap();
for (int i = 0; i < methods.length; i++) {
Method method = methods[i];
// Public methods only
if (!Modifier.isPublic(method.getModifiers()))
continue;
// with no parameters
if (method.getParameterTypes().length > 0)
continue;
// that return String or boolean