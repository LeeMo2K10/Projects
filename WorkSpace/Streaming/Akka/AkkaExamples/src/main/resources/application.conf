akka.persistence {
    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb.dir = "target/journal"
    }
    snapshot-store {
      plugin = "akka.persistence.snapshot-store.local"
      local.dir = "target/snapshots"
    }
  }
  akka.jvm-exit-on-fatal-error = false
    akka.loglevel = "DEBUG"
  akka.actor {
    serializers {
      java = "akka.serialization.JavaSerializer"
    }
    }
    
prio-mailbox {
  mailbox-type = "com.akka.MailBox.MyPriorityMailbox"
  //Other mailbox configuration goes here
}

akka.actor.deployment {
  /priomailboxactor {
    mailbox = prio-mailbox
  }
}

akka.actor.deployment {
  /routerExample/router1 {
    router = round-robin-pool
    nr-of-instances = 5
  }
}

akka.actor.deployment {
  /randomExample/router2 {
    router = random-pool
    nr-of-instances = 5
  }
}

akka.actor.deployment {
  /balancePoolExample/router3 {
    router = balancing-pool
    nr-of-instances = 5
  }
}

akka.actor.deployment {
  /SmallestMailboxPoolRouter/router4 {
    router = smallest-mailbox-pool
    nr-of-instances = 5
  }
}
akka.actor.deployment {
  /BroadcastPoolRouter/router5 {
    router = broadcast-pool
    nr-of-instances = 5
  }
}

akka.actor.deployment {
  /ScatterGatherFirstCompletedPoolExample/router6 {
    router = scatter-gather-pool
    nr-of-instances = 5
    within = 10 seconds
  }
}
akka.actor.deployment {
  /TailChoppingPoolExExample/router7 {
    router = tail-chopping-pool
    nr-of-instances = 5
    within = 10 seconds
    tail-chopping-router.interval = 20 milliseconds
  }
}