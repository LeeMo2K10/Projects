package com.akka.distribute;

import akka.actor.UntypedActor;
import akka.cluster.Cluster;
import akka.cluster.metrics.ClusterMetricsExtension;
import scala.Option;

public class MetricsListener extends UntypedActor {

	Cluster cluster = Cluster.get(getContext().system());

	ClusterMetricsExtension extension = ClusterMetricsExtension.get(getContext().system());

	@Override
	public void preRestart(Throwable reason, Option<Object> message) throws Exception {
		extension.subscribe(getSelf());
	}

	@Override
	public void postStop() throws Exception {

		extension.unsubscribe(getSelf());

	}

	@Override
	public void onReceive(Object message) throws Exception {
	    if (message instanceof ClusterMetricsChanged) {
	    	ClusterMetricsChanged clusterMetrics = (ClusterMetricsChanged) message;
	      for (NodeMetrics nodeMetrics : clusterMetrics.getNodeMetrics()) {
	        if (nodeMetrics.address().equals(cluster.selfAddress())) {
	          logHeap(nodeMetrics);
	          logCpu(nodeMetrics);
	        }
	}

}
