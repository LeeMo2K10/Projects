package com.akka.distribute;

import akka.actor.ActorRef;
import akka.actor.UntypedActor;
import akka.cluster.pubsub.DistributedPubSub;
import akka.cluster.pubsub.DistributedPubSubMediator;
import akka.event.Logging;
import akka.event.LoggingAdapter;

public class Publisher extends UntypedActor {

	LoggingAdapter log = Logging.getLogger(getContext().system(), this);

	ActorRef mediator = DistributedPubSub.get(getContext().system()).mediator();

	@Override
	public void onReceive(Object msg) throws Exception {

		if (msg instanceof String) {
			String in = (String) msg;
			String out = in.toUpperCase();
			log.info(out);

			mediator.tell(new DistributedPubSubMediator.Publish("content", out), getSelf());

		} else {
			unhandled(msg);
		}
	}

}
