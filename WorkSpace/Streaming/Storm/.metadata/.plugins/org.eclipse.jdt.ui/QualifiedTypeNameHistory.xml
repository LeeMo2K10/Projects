<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="backtype.storm.topology.IRichBolt"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="backtype.storm.config__init"/>
<fullyQualifiedTypeName name="com.storm.wordcount.WordSpitterBolt"/>
<fullyQualifiedTypeName name="com.storm.wordcount.WordCounterBolt"/>
<fullyQualifiedTypeName name="org.apache.log4j.Logger"/>
<fullyQualifiedTypeName name="backtype.storm.spout.SpoutOutputCollector"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="backtype.storm.topology.base.BaseRichSpout"/>
<fullyQualifiedTypeName name="backtype.storm.topology.base.BaseRichBolt"/>
<fullyQualifiedTypeName name="clojure.main"/>
<fullyQualifiedTypeName name="java.sql.DriverManager"/>
<fullyQualifiedTypeName name="com.mysql.jdbc.PreparedStatement"/>
<fullyQualifiedTypeName name="java.sql.PreparedStatement"/>
<fullyQualifiedTypeName name="backtype.storm.task.TopologyContext"/>
<fullyQualifiedTypeName name="storm.kafka.ZkHosts"/>
<fullyQualifiedTypeName name="storm.kafka.SpoutConfig"/>
<fullyQualifiedTypeName name="storm.kafka.KafkaSpout"/>
<fullyQualifiedTypeName name="storm.kafka.StringScheme"/>
<fullyQualifiedTypeName name="backtype.storm.utils.Utils"/>
<fullyQualifiedTypeName name="com.mysql.jdbc.Connection"/>
<fullyQualifiedTypeName name="org.apache.storm.jdbc.common.ConnectionProvider"/>
<fullyQualifiedTypeName name="org.apache.storm.jdbc.mapper.JdbcMapper"/>
<fullyQualifiedTypeName name="org.apache.storm.jdbc.mapper.SimpleJdbcMapper"/>
<fullyQualifiedTypeName name="org.apache.storm.jdbc.bolt.JdbcInsertBolt"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="com.google.common.collect.Maps"/>
<fullyQualifiedTypeName name="com.zaxxer.hikari.hibernate.HikariConnectionProvider"/>
<fullyQualifiedTypeName name="org.apache.storm.jdbc.common.HikariCPConnectionProvider"/>
<fullyQualifiedTypeName name="com.storm.kafka.mysql.Integration"/>
<fullyQualifiedTypeName name="storm.kafka.BrokerHosts"/>
<fullyQualifiedTypeName name="org.apache.storm.jdbc.common.Column"/>
<fullyQualifiedTypeName name="org.apache.storm.guava.collect.Lists"/>
<fullyQualifiedTypeName name="com.google.common.collect.Lists"/>
<fullyQualifiedTypeName name="backtype.storm.StormSubmitter"/>
<fullyQualifiedTypeName name="storm.trident.testing.FixedBatchSpout"/>
<fullyQualifiedTypeName name="java.util.Properties"/>
<fullyQualifiedTypeName name="backtype.storm.generated.AlreadyAliveException"/>
<fullyQualifiedTypeName name="backtype.storm.generated.InvalidTopologyException"/>
<fullyQualifiedTypeName name="backtype.storm.tuple.Fields"/>
<fullyQualifiedTypeName name="backtype.storm.tuple.Values"/>
<fullyQualifiedTypeName name="backtype.storm.topology.base.BaseBasicBolt"/>
<fullyQualifiedTypeName name="backtype.storm.topology.OutputFieldsDeclarer"/>
<fullyQualifiedTypeName name="backtype.storm.topology.BasicOutputCollector"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="storm.kafka.KafkaConfig"/>
<fullyQualifiedTypeName name="backtype.storm.spout.SchemeAsMultiScheme"/>
<fullyQualifiedTypeName name="org.apache.storm.guava.collect.ImmutableList"/>
<fullyQualifiedTypeName name="backtype.storm.Config"/>
<fullyQualifiedTypeName name="backtype.storm.topology.TopologyBuilder"/>
<fullyQualifiedTypeName name="java.util.UUID"/>
<fullyQualifiedTypeName name="backtype.storm.LocalCluster"/>
<fullyQualifiedTypeName name="backtype.storm.tuple.Tuple"/>
<fullyQualifiedTypeName name="storm.kafka.bolt.KafkaBolt"/>
<fullyQualifiedTypeName name="storm.kafka.bolt.selector.KafkaTopicSelector"/>
<fullyQualifiedTypeName name="storm.kafka.bolt.mapper.FieldNameBasedTupleToKafkaMapper"/>
<fullyQualifiedTypeName name="storm.kafka.bolt.selector.DefaultTopicSelector"/>
</qualifiedTypeNameHistroy>
