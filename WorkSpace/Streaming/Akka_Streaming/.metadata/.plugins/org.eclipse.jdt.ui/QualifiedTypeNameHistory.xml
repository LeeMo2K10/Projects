<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="akka.stream.UniformFanOutShape"/>
<fullyQualifiedTypeName name="akka.stream.javadsl.Balance"/>
<fullyQualifiedTypeName name="com.akka.stream.ParallelProcessing"/>
<fullyQualifiedTypeName name="akka.event.LoggingAdapter"/>
<fullyQualifiedTypeName name="akka.event.Logging"/>
<fullyQualifiedTypeName name="akka.Done"/>
<fullyQualifiedTypeName name="com.akka.stream.ScoopOfBatter"/>
<fullyQualifiedTypeName name="com.akka.stream.Pancake"/>
<fullyQualifiedTypeName name="com.akka.stream.HalfCookedPancake"/>
<fullyQualifiedTypeName name="com.akka.stream.ParallelizedPipeliningApp"/>
<fullyQualifiedTypeName name="akka.stream.javadsl.Keep"/>
<fullyQualifiedTypeName name="com.akka.stream.PipeliningParallelApp"/>
<fullyQualifiedTypeName name="akka.stream.ActorMaterializer"/>
<fullyQualifiedTypeName name="com.akka.stream.Source.FromIteratorApp"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="akka.japi.Creator"/>
<fullyQualifiedTypeName name="java.lang.Iterable"/>
<fullyQualifiedTypeName name="scala.concurrent.duration.FiniteDuration"/>
<fullyQualifiedTypeName name="scala.concurrent.Future"/>
<fullyQualifiedTypeName name="akka.dispatch.Futures"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="akka.stream.javadsl.SourceQueueWithComplete"/>
<fullyQualifiedTypeName name="akka.stream.OverflowStrategy"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="akka.stream.scaladsl.Sink"/>
<fullyQualifiedTypeName name="com.akka.stream.DrainSourceToList"/>
<fullyQualifiedTypeName name="java.util.concurrent.TimeUnit"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="akka.stream.stage.GraphStage"/>
<fullyQualifiedTypeName name="akka.stream.Inlet"/>
<fullyQualifiedTypeName name="akka.stream.Outlet"/>
<fullyQualifiedTypeName name="akka.stream.FlowShape"/>
<fullyQualifiedTypeName name="akka.stream.stage.GraphStageLogic"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="java.security.MessageDigest"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="akka.stream.stage.AbstractInHandler"/>
<fullyQualifiedTypeName name="akka.stream.stage.AbstractOutHandler"/>
<fullyQualifiedTypeName name="com.akka.stream.DigestCalculator"/>
<fullyQualifiedTypeName name="com.akka.stream.DigestTest"/>
<fullyQualifiedTypeName name="akka.stream.javadsl.Framing"/>
<fullyQualifiedTypeName name="akka.util.ByteString"/>
<fullyQualifiedTypeName name="akka.stream.javadsl.FramingTruncation"/>
<fullyQualifiedTypeName name="com.akka.stream.RecipeParseLines"/>
<fullyQualifiedTypeName name="akka.stream.javadsl.Source"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="akka.stream.javadsl.SubSource"/>
<fullyQualifiedTypeName name="akka.stream.impl.fusing.SubSource"/>
<fullyQualifiedTypeName name="com.akka.stream.RecipeReduceByKeyTest"/>
<fullyQualifiedTypeName name="akka.stream.javadsl.Sink"/>
<fullyQualifiedTypeName name="java.util.concurrent.CompletionStage"/>
<fullyQualifiedTypeName name="akka.NotUsed"/>
<fullyQualifiedTypeName name="java.lang.FunctionalInterface"/>
<fullyQualifiedTypeName name="akka.japi.function.Function"/>
<fullyQualifiedTypeName name="akka.japi.function.Function2"/>
<fullyQualifiedTypeName name="akka.io.SelectionHandler.WorkerForCommand"/>
<fullyQualifiedTypeName name="akka.stream.javadsl.Flow"/>
<fullyQualifiedTypeName name="akka.japi.Pair"/>
<fullyQualifiedTypeName name="scala.util.Left"/>
</qualifiedTypeNameHistroy>
