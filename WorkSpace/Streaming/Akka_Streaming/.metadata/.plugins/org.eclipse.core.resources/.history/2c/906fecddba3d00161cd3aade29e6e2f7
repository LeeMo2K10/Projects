package com.akka.stream;

import java.util.Arrays;

import akka.NotUsed;
import akka.actor.ActorSystem;
import akka.japi.function.Function;
import akka.stream.ActorMaterializer;
import akka.stream.ActorMaterializerSettings;
import akka.stream.Materializer;
import akka.stream.Supervision;
import akka.stream.javadsl.Source;

public class SupervisionStrategy {

	ActorSystem system = ActorSystem.create("ErrorHandling");

	final Function<Throwable, Supervision.Directive> decider = exc -> {
		if (exc instanceof ArithmeticException)
			return Supervision.resume();
		else
			return Supervision.stop();
	};

	final Materializer mat = ActorMaterializer
			.create(ActorMaterializerSettings.create(system).withSupervisionStrategy(decider), system);
	
	Source<Integer, NotUsed> source= Source.from(Arrays.asList(0,1,2,3,4,5)).map(elem -> 100/elem);
	
	
	
}
