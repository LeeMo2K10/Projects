package com.akka.stream;

import akka.stream.Attributes;
import akka.stream.FlowShape;
import akka.stream.Inlet;
import akka.stream.Outlet;
import akka.stream.stage.GraphStage;
import akka.stream.stage.GraphStageLogic;
import akka.util.ByteString;

public class DigestCalculator extends GraphStage<FlowShape<ByteString, ByteString>> {

	
	
	final Inlet<ByteString> in = Inlet.create("DigestCalculator.in");

	final Outlet<ByteString> out = Outlet.create("DigestCalculator.out");

	FlowShape<ByteString, ByteString> shape = FlowShape.of(in, out);

	@Override
	public FlowShape<ByteString, ByteString> shape() {
		return shape;
	}

	@Override
	public GraphStageLogic createLogic(Attributes arg0) {
		return new GraphStageLogic(shape) {
			
			
			
		};
	}

}
