package com.graphx.pageRank;

import java.io.Serializable;

import org.apache.log4j.Logger;
import org.apache.spark.SparkConf;
import org.apache.spark.SparkContext;
import org.apache.spark.graphx.Graph;
import org.apache.spark.graphx.GraphLoader;
import org.apache.spark.rdd.RDD;
import org.apache.spark.storage.StorageLevel;

public class PageRankApp implements Serializable {

	private static final long serialVersionUID = 1L;

	static Logger log = Logger.getLogger(PageRankApp.class);

	SparkConf conf = new SparkConf().setMaster("local").setAppName("PropertyGraph");
	SparkContext jssc = new SparkContext(conf);

	private void getRank() {

		Graph<Object, Object> graph = GraphLoader.edgeListFile(jssc, "src/main/resources/Followers.txt", true, -1,
				StorageLevel.MEMORY_AND_DISK(), StorageLevel.MEMORY_AND_DISK());

		graph.vertices().toJavaRDD().foreach(f -> {
			log.info("" + f);
		});
		graph.edges().toJavaRDD().foreach(f -> {
			log.info("" + f);
		});
		Graph<Object, Object> rank = graph.ops().pageRank(0.001, 0.002);
		String line=null;
		
		RDD<String> users = jssc.textFile("src/main/resources/users.txt", 2).map(line -> {
			
			line.split(",");
			
			
		}, evidence$3);
		
		

	}

	public static void main(String[] args) {

		PageRankApp app = new PageRankApp();
		app.getRank();
	}
}
