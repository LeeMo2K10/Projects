package com.sparkStreaming.WordCountUsingSparkStream;

import java.util.Arrays;

import org.apache.spark.SparkConf;
import org.apache.spark.api.java.function.FlatMapFunction;
import org.apache.spark.rdd.RDD;
import org.apache.spark.streaming.Duration;
import org.apache.spark.streaming.Durations;
import org.apache.spark.streaming.Time;
import org.apache.spark.streaming.api.java.JavaDStream;
import org.apache.spark.streaming.api.java.JavaReceiverInputDStream;
import org.apache.spark.streaming.api.java.JavaStreamingContext;
import org.apache.spark.streaming.dstream.DStream;

import scala.Function;
import scala.Option;
import scala.collection.immutable.List;

public class WordCount {
	public void test() {
		SparkConf conf = new SparkConf().setAppName("WordCount").setMaster("local[2]");
		JavaStreamingContext context = new JavaStreamingContext(conf, Durations.seconds(1));
		JavaReceiverInputDStream<String> lines=context.socketTextStream("localhost", 9999);
		
		JavaDStream<String> words=lines.flatMap(new FlatMapFunction<String, String>() {

			public Iterable<String> call(String t) throws Exception {
				
				return Arrays.asList(t.split(" "));
			}
		})
			
			
	}

	public static void main(String[] args) {

	}

}
