package com.tez.topk;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;

import org.apache.tez.mapreduce.processor.SimpleMRProcessor;
import org.apache.tez.runtime.api.ProcessorContext;
import org.apache.tez.runtime.library.api.KeyValueWriter;

import com.google.common.base.Preconditions;

public class Writer extends SimpleMRProcessor {
	private static final String INPUT = "input";
	private static final String WRITER = "writer";
	private static final String OUTPUT = "output";
	private static final String TOKENIZER = "tokenizer";
	private static final String SUM = "sum";
	LocalTop localTop;

	public Writer(ProcessorContext context) {
		super(context);

	}

	public void initialize() throws Exception {
		byte[] payload = getContext().getUserPayload().deepCopyAsArray();
		ByteArrayInputStream bis = new ByteArrayInputStream(payload);
		DataInputStream dis = new DataInputStream(bis);
		// store the local top K result
		localTop = new LocalTop(dis.readInt());
		dis.close();
		bis.close();
	}

	@Override
	public void run() throws Exception {
		Preconditions.checkArgument(getInputs().size() == 1);
		Preconditions.checkArgument(getOutputs().size() == 1);
		KeyValueWriter kvWriter = (KeyValueWriter) getOutputs().get(OUTPUT).getWriter();
	}

}
