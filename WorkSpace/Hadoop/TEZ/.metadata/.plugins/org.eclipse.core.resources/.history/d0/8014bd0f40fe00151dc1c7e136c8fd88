package com.tez;

import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.security.UserGroupInformation;
import org.apache.hadoop.util.GenericOptionsParser;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;
import org.apache.tez.dag.api.TezConfiguration;

public class WordCount extends Configured implements Tool {

	public int run(String[] args) throws Exception {
		System.out.println("Running WordCount");

		Configuration conf = getConf();
		String[] otherArgs = new GenericOptionsParser(conf, args).getRemainingArgs();

		if (otherArgs.length != 2) {
			printUsage();
			return 2;
		}
		WordCount job = new WordCount();
		job.run(otherArgs[0], otherArgs[1], conf);
		return 0;
	}

	private void run(String inputPath, String outputPath, Configuration conf) throws IOException {
		System.out.println("Running WordCount");
		TezConfiguration tezConf;
		if (conf != null) {
			tezConf = new TezConfiguration(conf);
		} else {
			tezConf = new TezConfiguration();

		}
		UserGroupInformation.setConfiguration(tezConf);
		String user = UserGroupInformation.getCurrentUser().getShortUserName();
		FileSystem fs = FileSystem.get(tezConf);
		String stagingDirStr = Path.SEPARATOR + "user" + Path.SEPARATOR + user + Path.SEPARATOR + ".staging"
				+ Path.SEPARATOR + Path.SEPARATOR + Long.toString(System.currentTimeMillis());
		Path stagingDir = new Path(stagingDirStr);
		tezConf.set(TezConfiguration.TEZ_AM_STAGING_DIR, stagingDirStr);
		stagingDir = fs.makeQualified(stagingDir);

	}

	private static void printUsage() {
		System.err.println("Usage: " + " wordcount <in1> <out1>");
		ToolRunner.printGenericCommandUsage(System.err);
	}

}
