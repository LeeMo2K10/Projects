package com.tez;

import org.apache.tez.common.counters.TezCounter;
import org.apache.tez.runtime.api.LogicalInput;
import org.apache.tez.runtime.api.ProcessorContext;
import org.apache.tez.runtime.api.Reader;
import org.apache.tez.runtime.library.api.KeyValuesReader;
import org.apache.tez.runtime.library.processor.SimpleProcessor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.common.base.Preconditions;

public class JoinValidateProcessor extends SimpleProcessor {
	private static final Logger LOG = LoggerFactory.getLogger(JoinValidateProcessor.class);
	private static final String LHS_INPUT_NAME = "lhsfile";
	private static final String RHS_INPUT_NAME = "rhsfile";

	private static final String COUNTER_GROUP_NAME = "JOIN_VALIDATE";
	private static final String MISSING_KEY_COUNTER_NAME = "MISSING_KEY_EXISTS";

	public JoinValidateProcessor(ProcessorContext context) {
		super(context);
	}

	@Override
	public void run() throws Exception {
		Preconditions.checkState(getInputs().size() == 2);
		Preconditions.checkState(getOutputs().size() == 0);
		LogicalInput lhinput = getInputs().get(LHS_INPUT_NAME);
		LogicalInput rhinput = getInputs().get(RHS_INPUT_NAME);
		Reader lhreader = lhinput.getReader();
		Reader rhreader = rhinput.getReader();
		Preconditions.checkState(lhreader instanceof KeyValuesReader);
		Preconditions.checkState(rhreader instanceof KeyValuesReader);
		KeyValuesReader lhReader = (KeyValuesReader) lhreader;
		KeyValuesReader rhReader = (KeyValuesReader) rhreader;
		TezCounter missingKeyCounter = getContext().getCounters().findCounter(COUNTER_GROUP_NAME,
				MISSING_KEY_COUNTER_NAME);
while(lhReader.next()){
	if(rhReader.next()){
		if(!lhReader.getCurrentKey().equals(rhReader.getCurrentKey())){
			LOG.info("MissMatching Keys :"+"LHS= "+lhReader.getCurrentKey()+"  RHS="+rhReader.getCurrentKey());
			
		}
		
	}
}
	}

}
