package com.tez.example;

import org.apache.tez.runtime.library.processor.SimpleProcessor;

public class SumProcessor extends SimpleProcessor{
	public SumProcessor(ProcessorContext context) {
	      super(context);
	    }

	    @Override
	    public void run() throws Exception {
	      Preconditions.checkArgument(getInputs().size() == 1);
	      Preconditions.checkArgument(getOutputs().size() == 1);
	      // the recommended approach is to cast the reader/writer to a specific type instead
	      // of casting the input/output. This allows the actual input/output type to be replaced
	      // without affecting the semantic guarantees of the data type that are represented by
	      // the reader and writer.
	      // The inputs/outputs are referenced via the names assigned in the DAG.
	      KeyValueWriter kvWriter = (KeyValueWriter) getOutputs().get(SORTER).getWriter();
	      KeyValuesReader kvReader = (KeyValuesReader) getInputs().get(TOKENIZER).getReader();
	      while (kvReader.next()) {
	        Text word = (Text) kvReader.getCurrentKey();
	        int sum = 0;
	        for (Object value : kvReader.getCurrentValues()) {
	          sum += ((IntWritable) value).get();
	        }
	        // write the sum as the key and the word as the value
	        kvWriter.write(new IntWritable(sum), word);
	      }
	    }
}
