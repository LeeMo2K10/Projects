package com.tez;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.tez.mapreduce.processor.SimpleMRProcessor;
import org.apache.tez.runtime.api.ProcessorContext;
import org.apache.tez.runtime.library.api.KeyValuesReader;
import org.apache.tez.runtime.library.api.KeyValuesWriter;

import com.google.common.base.Preconditions;

public class SumProcessor1 extends SimpleMRProcessor {
	static String INPUT = "Input";
	static String OUTPUT = "Output";
	static String TOKENIZER = "Tokenizer";
	static String SUMMATION = "Summation";

	public SumProcessor1(ProcessorContext context) {
		super(context);
	}

	@Override
	public void run() throws Exception {
		Preconditions.checkArgument(getInputs().size() == 1);
		Preconditions.checkArgument(getOutputs().size() == 1);
		KeyValuesWriter kWriter = (KeyValuesWriter) getOutputs().get(OUTPUT).getWriter();
		KeyValuesReader kReader = (KeyValuesReader) getInputs().get(TOKENIZER).getReader();
		while (kReader.next()) {
			Text word = (Text) kReader.getCurrentKey();
			int sum = 0;
			for (Object values : kReader.getCurrentValues()) {
				sum += ((IntWritable) values).get();

			}
			kWriter.write(word, sum);

		}

	}

}
