package com.myudfs;

import java.io.IOException;

import org.apache.pig.Algebraic;
import org.apache.pig.EvalFunc;
import org.apache.pig.backend.executionengine.ExecException;
import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapOnly.Map;
import org.apache.pig.data.DataBag;
import org.apache.pig.data.Tuple;
import org.apache.pig.data.TupleFactory;

public class Counter extends EvalFunc<Long> implements Algebraic {
	public Long exec(Tuple input) throws IOException {
		return count(input);
	}

	public static class Initial {
		public Tuple exec(Tuple input) throws IOException {
			return TupleFactory.getInstance().newTuple(count(input));
		}
	}

	public static class Intermed extends EvalFunc<Tuple> {
		public Tuple exec(Tuple input) throws IOException {
			return TupleFactory.getInstance().newTuple(sum(input));
		}
	}

	static public class Final extends EvalFunc<Long> {
		public Long exec(Tuple input) throws IOException {
			return sum(input);
		}
	}

	public String getInitial() {
		return Initial.class.getName();
	}

	public String getIntermed() {
		return Intermed.class.getName();
	}

	public String getFinal() {
		return Final.class.getName();
	}

	static protected Long count(Tuple input) throws ExecException {
		Object values = input.get(0);
		if (values instanceof DataBag)
			return ((DataBag) values).size();
		else if (values instanceof Map)
			return new Long(((Map) values).size());
	}

	static protected Long sum(Tuple input) throws ExecException, NumberFormatException {
		DataBag values = (DataBag) input.get(0);
		long sum = 0;
		for (Iterator it = values.iterator(); it.hasNext();) {
			Tuple t = it.next();
			sum += (Long) t.get(0);
		}
		return sum;
	}
}
